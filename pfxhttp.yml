---
# pfxhttp config file

server:

  listen:
    - kind: "socket_map"
      name: "map"
      type: "tcp"
      address: "0.0.0.0"
      port: 23450

    - kind: "policy_service"
      name: "policy"
      type: "tcp"
      address: "0.0.0.0"
      port: 23451

  logging:
    json: false
    level: debug

  http_client:
    max_connections_per_host: 10
    max_idle_connections: 4
    max_idle_connections_per_host: 1
    idle_connection_timeout: 10s

  tls:
    enabled: true
    http_client_skip_verify: true

  # Default Postfix limit
  socketmap_max_reply_size: 100000

  # Path to SQLite database for JWT token storage
  jwt_db_path: "/var/lib/pfxhttp/jwt.db"

socket_maps:

  demo:
    target: https://127.0.0.1:9443/api/v1/custom/pfx
    custom_headers:
      # User 'test', password 'test'
      - "Authorization: Basic dGVzdDp0ZXN0"
    payload: >
      {
        "key": "{{ .Key }}"
      }
    status_code: 200
    value_field: "demo_value"
    error_field: "error"
    no_error_value: "none"

  jwt_demo:
    target: https://127.0.0.1:9443/api/v1/custom/pfx
    jwt_auth:
      enabled: true
      token_endpoint: https://example.com/api/token
      username: foobar
      password: secret
    payload: >
      {
        "key": "{{ .Key }}"
      }
    status_code: 200
    value_field: "demo_value"
    error_field: "error"
    no_error_value: "none"

policy_services:

  policy:
    target: https://127.0.0.1:9443/api/v1/custom/pfxpolicy
    custom_headers:
      # User 'test', password 'test'
      - "Authorization: Basic dGVzdDp0ZXN0"
    payload: "{{ .Key }}"
    status_code: 200
    value_field: "result"
    error_field: "error"
    no_error_value: "none"

  jwt_policy:
    target: https://127.0.0.1:9443/api/v1/custom/pfxpolicy
    jwt_auth:
      enabled: true
      token_endpoint: https://example.com/api/token
      username: foobar
      password: secret
    payload: "{{ .Key }}"
    status_code: 200
    value_field: "result"
    error_field: "error"
    no_error_value: "none"
